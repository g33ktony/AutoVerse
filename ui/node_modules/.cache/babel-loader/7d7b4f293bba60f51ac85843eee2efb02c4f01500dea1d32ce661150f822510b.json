{"ast":null,"code":"var _jsxFileName = \"/Users/antonio/Documents/personal_projects/microservice/ui/src/screens/CarList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Grid, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080/cars\";\nconst CarList = () => {\n  _s();\n  const [cars, setCars] = useState([]);\n  useEffect(() => {\n    fetchCars();\n  }, []);\n  const fetchCars = async () => {\n    try {\n      const response = await axios.get(API_URL);\n      setCars(response.data);\n    } catch (error) {\n      console.error(\"Error fetching cars:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Car List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), cars.length ? cars.map(car => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/cars/${car.id}`,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: `${car.make} ${car.model} (${car.year})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this)\n    }, car.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(CarList, \"/EQt6wAxOgtQYDavlJ/SWb5B/tI=\");\n_c = CarList;\nexport default CarList;\nvar _c;\n$RefreshReg$(_c, \"CarList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","Container","Grid","Typography","jsxDEV","_jsxDEV","API_URL","CarList","_s","cars","setCars","fetchCars","response","get","data","error","console","children","container","spacing","xs","variant","fileName","_jsxFileName","lineNumber","columnNumber","length","map","car","to","id","make","model","year","_c","$RefreshReg$"],"sources":["/Users/antonio/Documents/personal_projects/microservice/ui/src/screens/CarList.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Container, Grid, TextField, Typography } from \"@mui/material\";\nimport { Car } from \"../types\";\n\nconst API_URL = \"http://localhost:8080/cars\";\n\nconst CarList = (): JSX.Element => {\n  const [cars, setCars] = useState<Car[]>([]);\n\n  useEffect(() => {\n    fetchCars();\n  }, []);\n\n  const fetchCars = async () => {\n    try {\n      const response = await axios.get<Car[]>(API_URL);\n      setCars(response.data);\n    } catch (error) {\n      console.error(\"Error fetching cars:\", error);\n    }\n  };\n\n  return (\n    <Container>\n      <Grid container spacing={2}>\n        <Grid xs={8}>\n          <Typography variant=\"h4\">Car List</Typography>\n          {/* <Item>xs=8</Item> */}\n        </Grid>\n        {/* <Grid xs={4}>\n    <Item>xs=4</Item>\n  </Grid>\n  <Grid xs={4}>\n    <Item>xs=4</Item>\n  </Grid>\n  <Grid xs={8}>\n    <Item>xs=8</Item>\n  </Grid> */}\n      </Grid>\n      {cars.length\n        ? cars.map((car) => (\n            <div key={car.id}>\n              <Link to={`/cars/${car.id}`}>\n                <Typography>{`${car.make} ${car.model} (${car.year})`}</Typography>\n              </Link>\n            </div>\n          ))\n        : null}\n    </Container>\n  );\n};\n\nexport default CarList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAAiBC,SAAS,EAAEC,IAAI,EAAaC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/E,MAAMC,OAAO,GAAG,4BAA4B;AAE5C,MAAMC,OAAO,GAAGA,CAAA,KAAmB;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAQ,EAAE,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACda,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAQP,OAAO,CAAC;MAChDI,OAAO,CAACE,QAAQ,CAACE,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEV,OAAA,CAACJ,SAAS;IAAAgB,QAAA,gBACRZ,OAAA,CAACH,IAAI;MAACgB,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAF,QAAA,eACzBZ,OAAA,CAACH,IAAI;QAACkB,EAAE,EAAE,CAAE;QAAAH,QAAA,eACVZ,OAAA,CAACF,UAAU;UAACkB,OAAO,EAAC,IAAI;UAAAJ,QAAA,EAAC;QAAQ;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUH,CAAC,EACNhB,IAAI,CAACiB,MAAM,GACRjB,IAAI,CAACkB,GAAG,CAAEC,GAAG,iBACXvB,OAAA;MAAAY,QAAA,eACEZ,OAAA,CAACL,IAAI;QAAC6B,EAAE,EAAG,SAAQD,GAAG,CAACE,EAAG,EAAE;QAAAb,QAAA,eAC1BZ,OAAA,CAACF,UAAU;UAAAc,QAAA,EAAG,GAAEW,GAAG,CAACG,IAAK,IAAGH,GAAG,CAACI,KAAM,KAAIJ,GAAG,CAACK,IAAK;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D;IAAC,GAHCG,GAAG,CAACE,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIX,CACN,CAAC,GACF,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEhB,CAAC;AAACjB,EAAA,CA5CID,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AA8Cb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}